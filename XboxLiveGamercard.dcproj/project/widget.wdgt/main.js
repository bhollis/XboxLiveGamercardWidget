/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
    
	var gamertag = widget.preferenceForKey(dashcode.createInstancePreferenceKey("gamertag"));
	if(!gamertag || gamertag == "")
		gamertag = "Major Nelson";
	
	window.gamertag = gamertag;
	var gamercard = document.getElementById("gamercard");
	gamercard.src = "http://gamercard.xbox.com/" + window.gamertag + ".card";
    var gamertagInput = document.getElementById("gamertagInput");
    gamertagInput.value = gamertag;
    
    gamertagInput.onkeypress = function(e) {
        if (e.which == 13) {
            showFront();
        }
    }
}

function update() {
	// Refresh
    clearTimeout(window.updateTimer);
	var gamercard = document.getElementById("gamercard");
	gamercard.src = "http://gamercard.xbox.com/" + window.gamertag + ".card";
	window.updateTimer = setTimeout("update()", 30 * 60 * 1000); // 30 mins
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    clearTimeout(window.updateTimer);
    widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("gamertag"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{   
    clearTimeout(window.updateTimer);
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    update();
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    window.gamertag = widget.preferenceForKey(dashcode.createInstancePreferenceKey("gamertag"));
    update();
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    window.gamertag = document.getElementById("gamertagInput").value;
    update();

    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}


function goToUrl(event)
{
    widget.upenURL("http://benhollis.net/software/dashboard/");
}
